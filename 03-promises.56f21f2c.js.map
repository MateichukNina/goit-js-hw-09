{"mappings":"iiBAAC,IAAAA,EAAAC,EAAA,SAEKC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAyC3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjDPR,EAAKgB,iBAAiB,UAqDtB,SAAkBC,GAChBA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,SAASf,EAAYgB,OAC9BC,EAAaF,SAASjB,EAAWkB,OACjCE,EAAOH,SAAShB,EAAUiB,OAEvBG,EAAI,EAAGA,EAAIL,EAAQK,IAAK,CAI/BlB,EAHiBkB,EAAI,EACPF,EAAcE,EAAID,GAG7BE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":[" import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener(\"submit\", onSubmit);\n\n//  function createPromise(position, delay) {\n//    return new Promise((resolve, reject) => {\n//      const shouldResolve = Math.random() > 0.3;\n \n//      setTimeout(() => {\n//        if (shouldResolve) {\n//          resolve({ position, delay });\n//        } else {\n//          reject({ position, delay });\n//        }\n//      }, 1000);\n//    });\n//  }\n \n//  function onSubmit(event) {\n//    event.preventDefault();\n \n//    const amount = parseInt(amountInput.value);\n//    const initialDelay = parseInt(delayInput.value);\n//    const step = parseInt(stepInput.value);\n//    let currentDelay = initialDelay;\n//    for (let i = 0; i < amount; i++) {\n//      const position = i + 1;\n//     //  const currentDelay = initialDelay + (i * step);\n//       setTimeout(() => {\n//      createPromise(position, currentDelay)\n//        .then(({ position, delay }) => {\n//          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${currentDelay}ms`);con\n//        })\n//        .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${currentDelay}ms`);\n//        });\n//    }, currentDelay)\n\n//    currentDelay += step;\n//  }};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const amount = parseInt(amountInput.value);\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + (i * step);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","parseInt","value","firstDelay","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.56f21f2c.js.map"}